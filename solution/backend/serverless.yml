# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: ${self:custom.settings.awsRegionShortName}-${self:custom.settings.solutionName}-infrastructure
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

custom:
  settings: ${file(./config/settings/.settings.js):merged}

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: python2.7
  region: ${self:custom.settings.awsRegion}
  profile: ${self:custom.settings.awsProfile}
  stackName: ${self:custom.settings.envName}-${self:service}

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:

    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_WIDGET2}"
      ## ROLE Insertion Point - DO NOT REMOVE


# you can define service wide environment variables here
  environment:

    DYNAMODB_TABLE_WIDGET2: ${self:custom.settings.dbTablePrefix}-WIDGET2
    ## ENVIRONMENT Insertion Point - DO NOT REMOVE

# you can add packaging information here
#package:
#  include:
#    - include-me.py
#    - include-me-dir/**
#  exclude:
#    - exclude-me.py
#    - exclude-me-dir/**

functions:

  create-widget2:
    handler: models/widget2.create
    events:
      - http:
          path: widget2
          method: post
          cors: true

  list-widget2:
    handler: models/widget2.list
    events:
      - http:
          path: widget2
          method: get
          cors: true

  get-widget2:
    handler: models/widget2.get
    events:
      - http:
          path: widget2/{id}
          method: get
          cors: true

  update-widget2:
    handler: models/widget2.update
    events:
      - http:
          path: widget2/{id}
          method: put
          cors: true

  delete-widget2:
    handler: models/widget2.delete
    events:
      - http:
          path: widget2/{id}
          method: delete
          cors: true
## FUNCTION Insertion Point - DO NOT REMOVE

#    Define function environment variables here
#    environment:
#      variable2: value2


#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
